/*
 * Copyright (C) 2018 Baltic Information Technologies
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

// Load keystore
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('D:/Users/Konstantins/.android/debug.keystore')
            storePassword 'android'
        }
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "eu.balticit.android.europewelcome"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 4
        versionName "1.1.4"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        debug {
            resValue("string", "GOOGLE_ANDROID_API_KEY", "\"AIzaSyC2XllDDhvfEyCv5NCFPBXalnFUruG3P6Y\"")
            resValue("string", "GOOGLE_WEB_CLIENT_ID_TOKEN", "\"42826527257-8g2htcveu0n8iebroi1hqj3e8cuonlf0.apps.googleusercontent.com\"")
            resValue("string", "APP_ENCODED_PUBLIC_KEY", "\"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAn6DI+Qta9EuWgqBD0pcgx2KiSW6k7yHiFbZZYi+5KtgGv2BnTFhq/bRi7C3OixcyQym9Cp733TBjg2Nw+pWVEs1JBzu76Otu1WIZxhZckQgaG5iEBu9Bx7olPl8lLmktB42xHdmPXn3XGSFnx7ltPgLLrQm2Dxb6aTklVytFJo2pUb5zkkZ97+FkQ4S3g0dyjEN3jq/ykRMEgbz9IisFlFQcblu26hqotLWJ7Q4Er3Euxi8qX/azEKBDKi+3B0ccxqH0NHDMItDW3hA8UFO6DY6Hy4xxvAjGownl4pZLVjsUCL9y8uCnacoIk0Pwpc5zj+y70WQdQtnudQiric/wbwIDAQAB\"")
            signingConfig signingConfigs.debug
        }
        release {
            resValue("string", "GOOGLE_ANDROID_API_KEY", "\"AIzaSyC2XllDDhvfEyCv5NCFPBXalnFUruG3P6Y\"")
            resValue("string", "GOOGLE_WEB_CLIENT_ID_TOKEN", "\"42826527257-8g2htcveu0n8iebroi1hqj3e8cuonlf0.apps.googleusercontent.com\"")
            resValue("string", "APP_ENCODED_PUBLIC_KEY", "\"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAn6DI+Qta9EuWgqBD0pcgx2KiSW6k7yHiFbZZYi+5KtgGv2BnTFhq/bRi7C3OixcyQym9Cp733TBjg2Nw+pWVEs1JBzu76Otu1WIZxhZckQgaG5iEBu9Bx7olPl8lLmktB42xHdmPXn3XGSFnx7ltPgLLrQm2Dxb6aTklVytFJo2pUb5zkkZ97+FkQ4S3g0dyjEN3jq/ykRMEgbz9IisFlFQcblu26hqotLWJ7Q4Er3Euxi8qX/azEKBDKi+3B0ccxqH0NHDMItDW3hA8UFO6DY6Hy4xxvAjGownl4pZLVjsUCL9y8uCnacoIk0Pwpc5zj+y70WQdQtnudQiric/wbwIDAQAB\"")
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Android Support
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    implementation "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:customtabs:$rootProject.supportLibraryVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    // Firebase
    implementation "com.google.firebase:firebase-auth:$rootProject.firebasePlayservicesVersion"
    implementation "com.google.firebase:firebase-firestore:$rootProject.firebasePlayservicesVersion"
    implementation "com.google.firebase:firebase-storage:$rootProject.firebasePlayservicesVersion"
    implementation "com.firebaseui:firebase-ui-firestore:$rootProject.firebiseUiVersion"
    implementation "com.firebaseui:firebase-ui-storage:$rootProject.firebiseUiVersion"

    // Play Services
    implementation "com.google.android.gms:play-services-auth:$rootProject.firebasePlayservicesVersion"
    implementation "com.google.android.gms:play-services-maps:$rootProject.firebasePlayservicesVersion"
    implementation "com.google.android.gms:play-services-places:$rootProject.firebasePlayservicesVersion"

    // Dagger2
    implementation "com.google.dagger:dagger:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'javax.inject:javax.inject:1'

    // Butter Knife
    implementation "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    // Facebook
    implementation "com.facebook.android:facebook-login:$rootProject.facebookVersion"

    // App Intro
    implementation 'com.github.apl-devs:appintro:v4.2.2'

    // Easy Perms
    implementation 'pub.devrel:easypermissions:1.1.1'

    // Multidex
    implementation 'com.android.support:multidex:1.0.3'

    // font
    implementation "uk.co.chrisjenx:calligraphy:$rootProject.calligraphyVersion"

    // network
    implementation "com.amitshekhar.android:rx2-android-networking:$rootProject.rx2FastAndroidNetworking"

    // parser

    //compile "com.google.code.gson:gson:$rootProject.gsonVersion"

    // database

    //compile "org.greenrobot:greendao:$rootProject.greenDaoVersion"

    // debug database

    //debugCompile "com.amitshekhar.android:debug-db:$rootProject.debugDBVersion"

    // reactive

    //compile "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"

    //compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // swipe view

    //compile "com.mindorks:placeholderview:$rootProject.placeholderviewVersion"

    // logger
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // dependencies for local unit tests

    //testCompile "junit:junit:$rootProject.ext.junitVersion"

    //testCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"

    //testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // UI Testing

    //androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"

    //androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"

    //androidTestCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"

    //androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    implementation files('libs/YouTubeAndroidPlayerApi.jar')
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
}

apply plugin: 'com.google.gms.google-services'